<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="2948,4167" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="40">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Agent Assistant Robot" sap:VirtualizedContainerService.HintSize="2928,4067" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="boolRepeatForever" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="2886,397" sap2010:WorkflowViewState.IdRef="Comment_4" Text="Agent Assistant Robot will trigger the bot with Hotkey keyboard trigger(Shfit+p) by the Agent.&#xA;The bot will then read all unread emails in inbox, checks one email at a time for a subject which contacts 'Ticket' in its text and if a email subject matches this condition it then downloads the excel Attachment.&#xA;The excel attachment has the content of the helpdesk ticket.&#xA;New workflow called&quot;ReadExcelContent.XAML&quot; is invoked to read the content of the Excel ticket request file and store those in seperate variables.&#xA;The ouput arguments from this workflow are inputed as the input arguments to the next invoked workflow called &quot;ZohoAutomation.XAML&quot;. This workflow will create ahelpdesk ticket in Zoho desk application.&#xA;Then the next email is processed and so on.&#xD;&#xA;Use Shift+ o to stop the bot." />
    <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Agent Information" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="2886,59" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Ready for Agent Input. &quot;+environment.NewLine+&quot;1) Use SHIFT+ p to Trigger the automation.&quot;+environment.NewLine +&quot;2) Use SHIFT +o to End the Automation.&quot;]" TopMost="True" />
    <Parallel sap:VirtualizedContainerService.HintSize="2886,3439" sap2010:WorkflowViewState.IdRef="Parallel_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MonitorEvents ContinueOnError="{x:Null}" DisplayName="Monitor Agent Action for Automation" sap:VirtualizedContainerService.HintSize="2256,3393" sap2010:WorkflowViewState.IdRef="MonitorEvents_1" RepeatForever="[boolRepeatForever]">
        <ui:MonitorEvents.Handler>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="args" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Event Handler to Trigger Automation" sap:VirtualizedContainerService.HintSize="2222,3225" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:UiElement" Name="EditableText" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[boolRepeatForever]" sap:VirtualizedContainerService.HintSize="2180,3133" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <Sequence DisplayName="Read new Emails" sap:VirtualizedContainerService.HintSize="1801,2986" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="MyMails" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Comment sap:VirtualizedContainerService.HintSize="1759,93" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Once the correct trigger is invoked then the unread Emails are read and then next steps are invoked." />
                    <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Agent Information" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="1759,59" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[&quot;Automation Initiated&quot;]" TopMost="True" />
                    <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Top 5 Unread Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="1759,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="True" Messages="[MyMails]" OnlyUnreadMessages="True" Top="5" />
                    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each unread mail in Inbox" sap:VirtualizedContainerService.HintSize="1759,2501" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[MyMails]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="snm:MailMessage">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Create Helpdesk Ticket from Mail attachments" sap:VirtualizedContainerService.HintSize="1723,2368" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Default="Ticket" Name="strSubjectTag" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1681,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[item.From.ToString + &quot; Mail subject is being read. &quot;]" />
                            <If Condition="[item.Subject.Contains(strSubjectTag)]" DisplayName="If Email subject contains 'Ticket'" sap:VirtualizedContainerService.HintSize="1681,2145" sap2010:WorkflowViewState.IdRef="If_1">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="1302,1998" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1260,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[item.From.ToString + &quot;Is shortlisted for processing.&quot;]" />
                                  <Sequence DisplayName="Save Request Attachment and process ticket creation" sap:VirtualizedContainerService.HintSize="1260,1775" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Boolean" Name="boolFolderExists" />
                                      <Variable x:TypeArguments="x:String" Default="[Environment.CurrentDirectory+&quot;\Attachments&quot;]" Name="strAttachmentsFolder" />
                                      <Variable x:TypeArguments="x:String" Default="Request.xlsx" Name="strTicketAttachmentFileName" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:PathExists DisplayName="Check if the Folder for Saved Attachment Path Exists" Exists="[boolFolderExists]" sap:VirtualizedContainerService.HintSize="1218,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[strAttachmentsFolder]" PathType="Folder" />
                                    <If Condition="[boolFolderExists]" DisplayName="If Folder exists" sap:VirtualizedContainerService.HintSize="1218,1554" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Then>
                                        <Sequence DisplayName="Save attachment sequence" sap:VirtualizedContainerService.HintSize="797,1407" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="attachments" />
                                            <Variable x:TypeArguments="x:String" Name="strContactName" />
                                            <Variable x:TypeArguments="x:String" Name="strEmail" />
                                            <Variable x:TypeArguments="x:String" Name="strSubject" />
                                            <Variable x:TypeArguments="x:String" Name="strPriority" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:SaveMailAttachments Attachments="[attachments]" DisplayName="Save Attachments" FolderPath="[Environment.CurrentDirectory+&quot;\Attachments&quot;]" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[item]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SaveMailAttachments>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="755,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Attachment in mail sent from  &quot;+item.From.ToString +&quot; is saved for further processing&quot;]" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="755,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Invoke ReadRequestExcel workflow to process the Excel attachment&quot;]" />
                                          <ui:Comment sap:VirtualizedContainerService.HintSize="755,131" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// &#xA;Input: Excel request file of the Ticket&#xA;Process: The workflow reads the Excel and extracts the ticket information and stores in the output arguments&#xA;Output: Name, Email , Subject and Priority information of the Ticket" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Read Ticket request Excel Workflow File" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ReadRequestExcel.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="RequestFilePath">[strAttachmentsFolder+"\"+strTicketAttachmentFileName]</InArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="ContactName">[strContactName]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="Email">[strEmail]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="Subject">[strSubject]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="Priority">[strPriority]</OutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <If Condition="[String.IsNullOrEmpty(strContactName) Or String.IsNullOrEmpty(strEmail) Or String.IsNullOrEmpty(strPriority)  Or String.IsNullOrEmpty(strSubject)]" DisplayName="If any of the required field for the ticket creation is Null" sap:VirtualizedContainerService.HintSize="755,628" sap2010:WorkflowViewState.IdRef="If_3">
                                            <If.Then>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Cannot create ticket in ZOHO as mandatory values are missing&quot;]" />
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Zoho automation Sequence" sap:VirtualizedContainerService.HintSize="376,481" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;All the required details are extracted from the request excel attachment. Inoke the Zohoautomation workflow.&quot;]" />
                                                <ui:Comment sap:VirtualizedContainerService.HintSize="334,131" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Prerequisite: Zoho desk already logged in and ready&#xA;Input: Name, Email , Subject and Priority information of the Ticket&#xA;Process: Logs a new Ticket&#xA;Output: Confirms that the Ticket was logged sucessfully." />
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Zohoautomation Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ZohoAutomation.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="ContactName">[strContactName]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Email">[strEmail]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Subject">[strSubject]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Priority">[strPriority]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,346" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Folder does't exist" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Folder to download the attachment doesnot exist&quot;]" />
                                          <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Terminating the workflow as the Folder to download the attachment doesnot exist" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;No Mail with request is available now!&quot;]" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEach>
                    <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Agent Information" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="1759,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;All the mails are processed.&quot;+environment.NewLine+&quot;1) Use SHIFT+ p to Check the emails and Trigger the automation.&quot;+environment.NewLine +&quot;2) Use SHIFT +o to End the Automation.&quot;]" TopMost="True" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Bot termination requsted by the Agent!&quot;]" />
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:MonitorEvents.Handler>
        <ui:MonitorEvents.Triggers>
          <ui:HotkeyTrigger DisplayName="Hotkey Trigger" EventMode="EVENT_BLOCK" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="HotkeyTrigger_1" Key="p" KeyModifiers="Shift" UseWindowsHotKey="False" />
        </ui:MonitorEvents.Triggers>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MonitorEvents>
      <ui:MonitorEvents ContinueOnError="{x:Null}" DisplayName="Monitor Events to Stop Monitoring" sap:VirtualizedContainerService.HintSize="456,3393" sap2010:WorkflowViewState.IdRef="MonitorEvents_2" RepeatForever="False">
        <ui:MonitorEvents.Handler>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="args" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Ending Sequence" sap:VirtualizedContainerService.HintSize="418,670" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Comment sap:VirtualizedContainerService.HintSize="376,131" sap2010:WorkflowViewState.IdRef="Comment_5" Text="Shift + o , will end the monitoring activity.&#xA;As the Monitoring activity is on a loop i.e. Repeat Forever is True on the automation workflow , we need to set this value to False and trigger the workflow." />
              <Sequence DisplayName="Event Handler to Stp the Bot" sap:VirtualizedContainerService.HintSize="376,407" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Agent Information" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[&quot;Stopping the Bot&quot;]" TopMost="True" />
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[boolRepeatForever]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey to Invoke the Automation" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="p" KeyModifiers="Shift">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:MonitorEvents.Handler>
        <ui:MonitorEvents.Triggers>
          <ui:HotkeyTrigger DisplayName="Hotkey Trigger" EventMode="EVENT_BLOCK" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="HotkeyTrigger_2" Key="o" KeyModifiers="Shift" UseWindowsHotKey="False" />
        </ui:MonitorEvents.Triggers>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MonitorEvents>
    </Parallel>
  </Sequence>
</Activity>